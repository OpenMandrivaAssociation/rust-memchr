diff -up memchr-2.3.4/Cargo.toml.omv~ memchr-2.3.4/Cargo.toml
--- memchr-2.3.4/Cargo.toml.omv~	2021-03-25 21:44:10.464236553 +0100
+++ memchr-2.3.4/Cargo.toml	2021-03-25 21:44:15.070285158 +0100
@@ -32,9 +32,6 @@ bench = false
 version = "0.2.18"
 optional = true
 default-features = false
-[dev-dependencies.quickcheck]
-version = "0.9"
-default-features = false
 
 [features]
 default = ["std"]
diff -up memchr-2.3.4/src/lib.rs.omv~ memchr-2.3.4/src/lib.rs
--- memchr-2.3.4/src/lib.rs.omv~	2021-03-25 21:44:56.332710699 +0100
+++ memchr-2.3.4/src/lib.rs	2021-03-25 21:45:03.522783098 +0100
@@ -36,9 +36,10 @@ compile_error!("memchr currently not sup
 #[cfg(feature = "std")]
 extern crate core;
 
-#[cfg(all(test, all(not(miri), feature = "std")))]
+/*#[cfg(all(test, all(not(miri), feature = "std")))]
 #[macro_use]
 extern crate quickcheck;
+*/
 
 use core::iter::Rev;
 
diff -up memchr-2.3.4/src/tests/iter.rs.omv~ memchr-2.3.4/src/tests/iter.rs
--- memchr-2.3.4/src/tests/iter.rs.omv~	2021-03-25 21:48:08.223489254 +0100
+++ memchr-2.3.4/src/tests/iter.rs	2021-03-25 21:48:14.873545835 +0100
@@ -47,7 +47,7 @@ fn memrchr3_iter() {
     }
 }
 
-quickcheck! {
+/* quickcheck! {
     fn qc_memchr_double_ended_iter(
         needle: u8, data: Vec<u8>, take_side: Vec<bool>
     ) -> bool {
@@ -155,6 +155,7 @@ quickcheck! {
         true
     }
 }
+*/
 
 // take items from a DEI, taking front for each true and back for each false.
 // Return a vector with the concatenation of the fronts and the reverse of the
diff -up memchr-2.3.4/src/tests/memchr.rs.omv~ memchr-2.3.4/src/tests/memchr.rs
--- memchr-2.3.4/src/tests/memchr.rs.omv~	2021-03-25 21:48:22.006606199 +0100
+++ memchr-2.3.4/src/tests/memchr.rs	2021-03-25 21:48:31.134682957 +0100
@@ -1,5 +1,5 @@
 use fallback;
-use naive;
+//use naive;
 use {memchr, memchr2, memchr3, memrchr, memrchr2, memrchr3};
 
 use tests::memchr_tests;
@@ -88,6 +88,7 @@ fn memrchr3_fallback_find() {
     }
 }
 
+/*
 quickcheck! {
     fn qc_memchr1_matches_naive(n1: u8, corpus: Vec<u8>) -> bool {
         memchr(n1, &corpus) == naive::memchr(n1, &corpus)
@@ -129,3 +130,4 @@ quickcheck! {
         memrchr3(n1, n2, n3, &corpus) == naive::memrchr3(n1, n2, n3, &corpus)
     }
 }
+*/
